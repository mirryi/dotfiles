# -- dotprofile configuration file
#
# Data types:
# - bool:         `true` or `false`
# - int:          integer number
# - float:        floating point number
# - string:       string of characters
# - path:         the path to a file. Relative paths are all relative to this file.
# - list[type]:   list of values of type `type`
# - string:type:  key-value pairs; values are of type `type`

# Variables: (lowest to highest precedence)
# - environment variables (e.g. HOME or XDG_CONFIG_HOME)
#       Can be used in global variables, common configuration paths and variables, profile
#       configuration variables, application configuration variables, and template files.
# - global variables
#       (`vars` in this file)
#       Can be used in common configuration paths and variables, profile configuration variables,
#       application configuration variables, and template files.
# - common configuration variables
#       (values in files specified in `common-configs` in this file)
#       Can be used in profile configuration variables, application configuration variables,
#       and template files.
# - profile configuration variables
#       (values in the profile configuration file)
#       Can be used in application configuration variables and template files.

# Optional settings:
# - vars            (string:string) list of extra variables that can be used in other settings,
#                       scripts, and templates. Variables cannot be nested.
# - common-configs  (list[path]) list of configuration files to load before the profile configuration.
# - run-before      (list[path]) list of scripts to run once before processing any applications.
#                       These scripts do not have access to application-specific variables.
# - run-after       (list[path]) list of scripts to run once after processing any applications.
#                       These scripts do not have access to application-specific variables.
# - run-before-each (list[path]) list of scripts to run before processing each application.
# - run-after-each  (list[path]) list of scripts to run after processing each application.

vars:
  home: "{{ .HOME }}"
  config_home: "{{ .XDG_CONFIG_HOME }}"

common-configs:
  - local.yaml

run-after:
  - hooks/set-wallpaper.sh "{{ .wallpaper }}"

# List of application templating instructions.
#
# Required settings:
# - name        (string) the name of the application.
#
# Optional settings:
# - template    (bool) whether or not the file specified by `src` is a template that should be
#                   processed.
# - src         (path) path of the source file to process and link to the destination.
# - dest        (path) path of the destination to be linked to.
# - run-before  (list[path]) list of scripts to run before processing `src`.
# - run-after   (list[path]) list of scripts to run after processing `src`.

applications:
  - name: alacritty
    template: true
    src: "{{ .config_home }}/alacritty/alacritty.yml.tmpl"
    dest: "{{ .config_home }}/alacritty/alacritty.yml"
  - name: bat
    template: true
    src: "{{ .config_home }}/bat/config.tmpl"
    dest: "{{ .config_home }}/bat/config"
  - name: beets
    template: true
    src: "{{ .config_home }}/beets/config.yaml.tmpl"
    dest: "{{ .config_home }}/beets/config.yaml"
  - name: dunst
    template: true
    src: "{{ .config_home }}/dunst/dunstrc.tmpl"
    dest: "{{ .config_home }}/dunst/dunstrc"
    run-after:
      - hooks/dunst-after.sh
  - name: gtk
    run-after:
      - hooks/gtk-theme-switch.sh "{{ .gtk.theme }}"
  - name: hangups
    template: true
    src: "{{ .config_home }}/hangups/hangups.conf.tmpl"
    dest: "{{ .config_home }}/hangups/hangups.conf"
  - name: i3
    template: true
    src: "{{ .config_home }}/i3/config.tmpl"
    dest: "{{ .config_home }}/i3/config"
    run-after:
      - hooks/i3-after.sh
  - name: neovim
    symlink: true
    src: "{{ .config_home }}/nvim/themes/{{ .neovim.theme }}.vim"
    dest: "{{ .config_home }}/nvim/theme.vim"
  - name: polybar-network
    template: true
    src: "{{ .config_home }}/polybar/modules/network.ini.tmpl"
    dest: "{{ .config_home }}/polybar/modules/network.ini"
  - name: qutebrowser
    symlink: true
    src: "{{ .config_home }}/qutebrowser/themes/{{ .qutebrowser.theme }}.py"
    dest: "{{ .config_home }}/qutebrowser/theme.py"
  - name: rofi
    template: true
    src: "{{ .config_home }}/rofi/config.rasi.tmpl"
    dest: "{{ .config_home }}/rofi/config.rasi"
  - name: taskwarrior
    symlink: true
    src: "{{ .config_home }}/task/themes/{{ .taskwarrior.theme }}.conf"
    dest: "{{ .config_home }}/task/theme.conf"
  - name: tmux
    symlink: true
    src: "{{ .config_home }}/tmux/themes/{{ .tmux.theme }}.conf"
    dest: "{{ .config_home }}/tmux/theme.conf"
    run-after:
      - hooks/tmux-after.sh
  - name: termite
    template: true
    src: "{{ .config_home }}/termite/config.tmpl"
    dest: "{{ .config_home }}/termite/config"
  - name: xresources-theme
    template: true
    src: "{{ .config_home }}/X11/xresources.theme.tmpl"
    dest: "{{ .config_home }}/X11/xresources.theme"
    run-after:
      - hooks/xrdb-merge.sh "{{ .config_home }}/X11/xresources.theme"
  - name: polybar
    template: true
    src: "{{ .config_home }}/polybar/theme.ini.tmpl"
    dest: "{{ .config_home }}/polybar/theme.ini"
    run-after:
      - hooks/polybar-reload.sh
