#
# use
#
snippet "use " "use ?;" brA
use $1;$0
endsnippet

snippet "usea " "use ? as ?;" brA
use $1 as $2;$0
endsnippet

snippet "use\* " "use ?::*" brA
use $1::*;$0
endsnippet

#
# mod
#
snippet "mod " "mod ?;" brA
mod $1;$0
endsnippet

snippet "pmod " "pub mod ?;" brA
pub mod $1;$0
endsnippet

snippet "bmod " "mod ? {}" brA
mod $1 {
	$0
}
endsnippet

snippet "pbmod " "pub mod ? {}" brA
pub mod $1 {
	$0
}
endsnippet

#
# struct
#
priority 100
snippet "struct " "struct ? {}" brA
struct ${1:Name} {
	$0
}
endsnippet

priority 200
snippet "pstruct " "struct ? {}" brA
pub struct ${1:Name} {
	$0
}
endsnippet

# snippet "struct " "struct ? {}" brA
# $1struct ${2:name}`!p
# snip.rv = '<' if t[3] != "" else ""`${3:|}`!p
# snip.rv = '>' if t[3] != "" else ""` {
# $0
# }
# endsnippet

snippet "derive " "#[derive(?)]" brA
#[derive(${1})]$0
endsnippet

#
# enum
#
priority 100
snippet "enum " "enum ? {}" brA
enum ${1:Name} {
	$0
}
endsnippet

priority 200
snippet "penum " "pub enum ? {}" brA
pub enum ${1:Name} {
	$0
}
endsnippet

# trait
snippet "trait " "trait ? {}" brA
trait ${1:Name} {
	$0
}
endsnippet

snippet "ptrait " "pub trait ? {}" brA
pub trait ${1:Name} {
	$0
}
endsnippet

# type
snippet "type " "type ? = ?" brA
type ${1:Name} = ${2:type};$0
endsnippet

snippet "ptype " "pub type ? = ?" brA
pub type ${1:Name} = ${2:type};$0
endsnippet

#
# fn
#
priority 100
snippet "fn " "fn ?(?) {}" brA
fn ${1:name}($2) ${3/..*/-> /}$3 {
	${VISUAL}$0
}
endsnippet

priority 200
snippet "pfn " "pub fn ?(?) -> ? {}" brA
pub fn ${1:name}($2)${3/..*/-> /}$3 {
	${VISUAL}$0
}
endsnippet

priority 200
snippet "afn " "async fn ?(?) -> ? {}" brA
async fn ${1:name}($2)${3/..*/-> /}$3 {
	${VISUAL}$0
}
endsnippet

priority 300
snippet "pafn " "pub async fn ?(?) -> ? {}" brA
pub async fn ${1:name}($2)${3/..*/-> /}$3 {
	${VISUAL}$0
}
endsnippet

snippet inline "#[inline]" bA
#[inline]
endsnippet

snippet "fnmain " "fn main() {}" brA
fn main() ${1/..*/-> /}$1 {
	${VISUAL}$0
}
endsnippet
