global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'
def comment():
	return vim.eval('vimtex#syntax#in_comment()') == '1'
def env(name):
	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')")
	return x != '0' and y != '0'
endglobal

#
# Blocks
#
snippet mb "\[% ... \]%" i
\[%
	${0:${VISUAL}}
\]%
endsnippet

snippet mt "$?$" i
$${0:${VISUAL}}$
endsnippet

snippet mpar "\begin{mathpar} ... \end{mathpar}"
\begin{mathpar}
	${0:${VISUAL}}
\end{mathpar}
endsnippet

snippet marr "\[\begin{array} ... \end{array}\]"
\[\begin{array}
	${0:${VISUAL}}
\end{array}\]
endsnippet

snippet mali "\begin{align*} .. \end{align*}"
\begin{align*}
	${0:${VISUAL}}
\end{align*}
endsnippet

#
# Fractions
#
context "math()"
snippet // "\frac{?}{?}" iA
\\frac{$1}{$2}$0
endsnippet

snippet / "\frac{?}{?}" i
\\frac{${VISUAL}}{$1}$0
endsnippet

context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "\frac{?}{?}" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
context "math()"
snippet '^.*\)/' "\frac{(?)}{?}" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	if stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i-=1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

#
# Notation
#
snippet sum "\sum_{n=?}^{?} ?" w
\sum_{n=${1:1}}^{${2:\infty}} ${3:a_n z^n}
endsnippet

snippet taylor "\sum_{?=?}^{?} ? (x-a^)?" w
\sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x-a)^$1 $0
endsnippet

snippet lim "\lim_? \to ?" w
\lim_{${1:n} \to ${2:\infty}}
endsnippet

snippet limsup "\limsup_{? \to ?}" w
\limsup_{${1:n} \to ${2:\infty}}
endsnippet

snippet prod "\prod_{?=?}^{?} ?" w
\prod_{${1:n=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
endsnippet

snippet part "\frac{\partial ?}{\partial ?}" w
\frac{\partial ${1:V}}{\partial ${2:x}} $0
endsnippet

context "math()"
snippet sqrt "\sqrt{?}" iA
\sqrt{${1:${VISUAL}}}
endsnippet

#
# Symbols
#

# Subscript
context "math()"
snippet '([A-Za-z])(\d)' "?_?" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "?_{?}" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

context "math()"
snippet __ "_{?}" iA
_{$1}$0
endsnippet

context "math()"
snippet xnn "x_{n}" iA
x_{n}
endsnippet

context "math()"
snippet ynn "y_{n}" iA
y_{n}
endsnippet

context "math()"
snippet xmm "y_{m}" iA
x_{m}
endsnippet

context "math()"
snippet ymm "y_{m}" iA
y_{m}
endsnippet

context "math()"
snippet xii "x_{i}" iA
x_{i}
endsnippet

context "math()"
snippet yii "y_{i}" iA
y_{i}
endsnippet

context "math()"
snippet xjj "x_{j}" iA
x_{j}
endsnippet

context "math()"
snippet yjj "y_{j}" iA
y_{j}
endsnippet

context "math()"
snippet xn1 "x_{n+1}" iA
x_{n+1}
endsnippet

# Superscript
context "math()"
snippet sr "^2" iA
^2
endsnippet

context "math()"
snippet cb "^3" iA
^3
endsnippet

context "math()"
snippet ^ "^{?}" iA
^{$1}$0
endsnippet

# Hat
context "math()"
priority 10
snippet "bar " "\overline{?}" riA
\overline{$1}$0
endsnippet

context "math()"
priority 100
snippet "([a-zA-Z])bar" "\overline{?}" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

# Bar
context "math()"
priority 10
snippet "hat " "\hat{?}" riA
\hat{$1}$0
endsnippet

context "math()"
priority 100
snippet "([a-zA-Z])hat" "\hat{?}" riA
\hat{`!p snip.rv=match.group(1)`}
endsnippet

# Implies
context "math()"
snippet => "\implies" Ai
\implies
endsnippet

context "math()"
snippet =< "\impliedby" Ai
\impliedby
endsnippet

context "math()"
snippet iff "iff" iA
\iff
endsnippet

# Arrows
priority 100
context "math()"
snippet -> "\to" iA
\to
endsnippet

priority 200
context "math()"
snippet <-> "\leftrightarrow" iA
\leftrightarrow
endsnippet

context "math()"
snippet !> "\mapsto" iA
\mapsto
endsnippet

# Equality
context "math()"
snippet == "&=" iA
&=$1
endsnippet

context "math()"
snippet != "\neq" iA
\neq
endsnippet

context "math()"
snippet <= "\leq" iA
\le
endsnippet

context "math()"
snippet >= "\geq" iA
\ge
endsnippet

context "math()"
snippet >> "\gg" iA
\gg
endsnippet

context "math()"
snippet << "\ll" iA
\ll
endsnippet

# Ceil
context "math()"
snippet ceil "\left\lceil ? \right\rceil" i
\left\lceil $1 \right\rceil $0
endsnippet

# Floor
context "math()"
snippet floor "\left\lfloor ? \right\rfloor" i
\left\lfloor $1 \right\rfloor$0
endsnippet

# Infinity
context "math()"
snippet __ "_{?}" iA
_{$1}$0
endsnippet

# Cross
context "math()"
snippet xx "\times" iA
\times
endsnippet

# Cardinality / aboslute value
context "math()"
snippet abs "\lvert ? \rvert" i
\left\lvert ${0:${VISUAL}} \right\rvert
endsnippet

# Text
context "math()"
snippet tt "\text{?}"
\text{${1:${VISUAL}}}${0}
endsnippet

#
# Symbols
#
context "math()"
snippet RR "\mathbb{R}" i
\mathbb{R}
endsnippet

context "math()"
snippet NN "\mathbb{N}" i
\mathbb{N}
endsnippet

context "math()"
snippet ZZ "\mathbb{Z}" i
\mathbb{Z}
endsnippet

context "math()"
snippet ZZ+ "\mathbb{Z}^{+}" i
\mathbb{Z}^{+}
endsnippet

context "math()"
snippet ZZ- "\mathbb{Z}^{-}" i
\mathbb{Z}^{-}
endsnippet

context "math()"
snippet QQ "\mathbb{Q}" i
\mathbb{Q}
endsnippet

#
# amsthm snippets
#
snippet thm "\begin{theorem}[?] ... \end{theorem}"
\begin{theorem}[${1}]
	${0:${VISUAL}}
\end{theorem}
endsnippet

snippet lemm "\begin{lemma} ... \end{lemma}"
\begin{lemma}
	${0:${VISUAL}}
\end{lemma}
endsnippet

snippet soln "\begin{solution} ... \end{solution}"
\begin{solution}
	${0:${VISUAL}}
\end{solution}
endsnippet

#
# Sympy evaluation
#
context "math()"
snippet sympy "sympy ? sympy" w
sympy $1 sympy$0
endsnippet

context "math()"
priority 10000
snippet 'sympy(.*)sympy' "sympy evaluation" wr
`!p
from sympy import *
x, y, z, t = symbols('x y z t')
k, m, n = symbols('k m n', integer=True)
f, g, h = symbols('f g h', cls=Function)
init_printing()
snip.rv = eval('latex(' + match.group(1).replace('\\', '') \
    .replace('^', '**') \
    .replace('{', '(') \
    .replace('}', ')') + ')')
`
endsnippet
