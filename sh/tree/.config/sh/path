#!/bin/sh

## User binaries
# Local user binaries
if [ -d "$HOME/.local/bin" ]; then
  export PATH="$PATH:$HOME/.local/bin"
fi

# Rust cargo installed binaries
_cargo_home=${CARGO_HOME:-$XDG_DATA_HOME/cargo}
if [ -d "$_cargo_home/bin" ]; then
  export PATH="$PATH:$_cargo_home/bin"
fi

# Yarn installed binaries
if [ -d "$HOME/.local/share/npm/bin" ]; then
  export PATH="$PATH:$HOME/.local/share/npm/bin"
fi

# Ruby gems installed binaries
if [ -d "$HOME/.local/share/gem/bin" ]; then
  export PATH="$PATH:$HOME/.local/share/gem/bin"
fi

# Go installed binaries
_go_home=${GOPATH:-$XDG_DATA_HOME/go}
if [ -d "$_go_home/bin" ]; then
  export PATH="$PATH:$_go_home/bin"
fi

# ghcup installed tool binaries
if [ -d "$GHCUP_INSTALL_BASE_PREFIX/.ghcup/bin" ]; then
  export PATH="$PATH:$GHCUP_INSTALL_BASE_PREFIX/.ghcup/bin"
fi

## Java home directory
if [ -d "/usr/lib/jvm/java-14-openjdk" ]; then
  export JAVA_HOME="/usr/lib/jvm/java-14-openjdk"
  if [ -d "$JAVA_HOME/bin" ]; then
    export PATH="$PATH:$JAVA_HOME/bin"
  fi
fi

## TeXlive
# TeXlive binaries
if [ -d "/usr/local/share/texlive/2019/bin/x86_64-linux" ]; then
  export PATH="$PATH:/usr/local/share/texlive/2019/bin/x86_64-linux"
fi

# TeXlive man pages
if [ -d "/usr/local/share/texlive/2019/texmf-dist/doc/man" ]; then
  export MANPATH="$MANPATH:/usr/local/share/texlive/2019/texmf-dist/doc/man"
fi

# TeXlive info pages
if [ -d "/usr/local/share/texlive/2019/texmf-dist/doc/info" ]; then
  export INFOPATH="$INFOPATH:/usr/local/texlive/2019/texmf-dist/doc/info"
fi

## R user libraries directory
export R_PROFILE="$XDG_CONFIG_HOME/R/Rprofile"
export R_LIBS_USER="$XDG_DATA_HOME/R/library"

## Remove duplicates
old_PATH=$PATH:; PATH=
while [ -n "$old_PATH" ]; do
  x=${old_PATH%%:*}
  case $PATH: in
    *:"$x":*) ;;
    *) PATH=$PATH:$x;;
  esac
  old_PATH=${old_PATH#*:}
done
PATH=${PATH#:}
unset old_PATH x
