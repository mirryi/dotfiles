#!/bin/bash

wallpapers_config="$XDG_CONFIG_HOME/wallpapers"
cache_dir="$XDG_CACHE_HOME/wallpaper"
pid_file="$cache_dir/animated_pid"
toggle_file="$cache_dir/toggled"

pid_exists() {
  ps -p $1 > /dev/null
}

write_toggle() {
  mkdir -p "$cache_dir"
  echo $1 > "$toggle_file"
}

load_still() {
  feh --no-fehbg --bg-fill "$wallpapers_config/still.jpg"
}

start_paperview() {
  paperview "$wallpapers_config/animated" 40 &
  pid=$!

  mkdir -p "$cache_dir"
  echo $pid > "$pid_file"

  write_toggle 1
}

play_paperview() {
  # pid file exists, check it
  if [[ -f $pid_file ]]; then
    read -d $'\0x4' pid < "$pid_file"
    # continue the process if it exists
    if pid_exists $pid; then
      kill -CONT $pid
      write_toggle 1
    # start paperview if it doesn't
    else
      start_paperview
    fi
  # start paperview if no pid file found
  else
    start_paperview
  fi
}

suspend_paperview() {
  # pid file exists, check it
  if [[ -f $pid_file ]]; then
    read -d $'\0x4' pid < "$pid_file"
    # suspend the process if it exists
    pid_exists $pid && kill -STOP $pid
  fi

  write_toggle 0
  load_still
}

kill_paperview() {
  # pid file exists, check it
  if [[ -f $pid_file ]]; then
    read -d $'\0x4' pid < "$pid_file"
    # kill the process if it exists
    pid_exists $pid && kill -9 $pid
  fi

  write_toggle 0
  load_still
}

# switch play/pause
if [ $1 == "toggle" ]; then
  # toggle file exists, check it
  if [[ -f $toggle_file ]]; then
    read -d $'\0x4' toggle < "$toggle_file"
    # if toggle marked as on, suspend the process
    if [ $toggle == 1 ]; then
      suspend_paperview
    # if toggle marked as off, play the process
    else
      play_paperview
    fi
  # toggle file doesn't exist, assume off
  else
    play_paperview
  fi
# suspend process
elif [ $1 == "pause" ]; then
  suspend_paperview
# continue or start process
elif [ $1 == "play" ]; then
  play_paperview
# kill the process
elif [ $1 == "kill" ]; then
  kill_paperview
fi
